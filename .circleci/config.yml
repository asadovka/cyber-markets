version: 2

aliases:

  # Common configuration for all jobs
  - &defaults
    working_directory: ~/build
    docker:
      - image: circleci/openjdk:8-jdk

  - &release_filter
    filters:
      tags:
        only: /.*/
      branches:
        ignore: /.*/

jobs:

  build_project:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - project-dependencies-{{ checksum "build.gradle" }}
            - project-dependencies
          paths:
            - ~/.gradle/caches/
            - ~/.gradle/wrapper/
      - run:
          name: Build and test the cyber-markets project
          command: ./gradlew clean build
      - save_cache:
          key: project-dependencies-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle/caches/
            - ~/.gradle/wrapper/

  deploy_exchanges-connector_image:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: Build exchanges-connector docker image
          command: |
            docker build -t cybernode/cm-exchanges-connector:$CIRCLE_TAG -f ./exchanges-connector/Dockerfile ./
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push cybernode/cm-exchanges-connector:$CIRCLE_TAG
            docker tag cybernode/cm-exchanges-connector:$CIRCLE_TAG cybernode/cm-exchanges-connector:latest
            docker push cybernode/cm-exchanges-connector:latest

  deploy_tickers_image:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: Build tickers docker image
          command: |
            docker build -t cybernode/cm-tickers:$CIRCLE_TAG -f ./tickers/Dockerfile ./
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push cybernode/cm-tickers:$CIRCLE_TAG
            docker tag cybernode/cm-tickers:$CIRCLE_TAG cybernode/cm-tickers:latest
            docker push cybernode/cm-tickers:latest

  deploy_stream-api_image:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: Build stream-api docker image
          command: |
            docker build -t cybernode/cm-stream-api:$CIRCLE_TAG -f ./stream-api/Dockerfile ./
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push cybernode/cm-stream-api:$CIRCLE_TAG
            docker tag cybernode/cm-stream-api:$CIRCLE_TAG cybernode/cm-stream-api:latest
            docker push cybernode/cm-stream-api:latest

  deploy_rest-api_image:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: Build rest-api docker image
          command: |
            docker build -t cybernode/cm-rest-api:$CIRCLE_TAG -f ./rest-api/Dockerfile ./
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push cybernode/cm-rest-api:$CIRCLE_TAG
            docker tag cybernode/cm-rest-api:$CIRCLE_TAG cybernode/cm-rest-api:latest
            docker push cybernode/cm-rest-api:latest

  deploy_storer_image:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: Build storer docker image
          command: |
            docker build -t cybernode/cm-storer:$CIRCLE_TAG -f ./storer/Dockerfile ./
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push cybernode/cm-storer:$CIRCLE_TAG
            docker tag cybernode/cm-storer:$CIRCLE_TAG cybernode/cm-storer:latest
            docker push cybernode/cm-storer:latest

workflows:
  version: 2

  cyber-markets_build:
    jobs:
      - build_project:
          filters:
            tags:
              only: /.*/
      - deploy_exchanges-connector_image:
          <<: *release_filter
          requires:
            - build_project
      - deploy_tickers_image:
          <<: *release_filter
          requires:
            - build_project
      - deploy_stream-api_image:
          <<: *release_filter
          requires:
            - build_project
      - deploy_rest-api_image:
          <<: *release_filter
          requires:
            - build_project
      - deploy_storer_image:
          <<: *release_filter
          requires:
            - build_project